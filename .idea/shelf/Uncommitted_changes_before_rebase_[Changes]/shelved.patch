Index: roborally/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Space.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n *  This file is part of the initial project provided for the\r\n *  course \"Project in Software Development (02362)\" held at\r\n *  DTU Compute at the Technical University of Denmark.\r\n *\r\n *  Copyright (C) 2019, 2020: Ekkart Kindler, ekki@dtu.dk\r\n *\r\n *  This software is free software; you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation; version 2 of the License.\r\n *\r\n *  This project is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n *\r\n *  You should have received a copy of the GNU General Public License\r\n *  along with this project; if not, write to the Free Software\r\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n *\r\n */\r\npackage dk.dtu.compute.se.pisd.roborally.model;\r\n\r\nimport dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\r\nimport dk.dtu.compute.se.pisd.roborally.controller.FieldAction;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * ...\r\n *\r\n * @author Ekkart Kindler, ekki@dtu.dk\r\n *\r\n */\r\npublic class Space extends Subject {\r\n\r\n    private Player player;\r\n    /**\r\n     * ...\r\n     *\r\n     * @author Christoffer Fink, s205449\r\n     *\r\n     */\r\n    private List<Heading> walls = new ArrayList<>();\r\n    private List<FieldAction> actions = new ArrayList<>();\r\n\r\n    public final Board board;\r\n    private Player player;\r\n\r\n    private List<Heading> walls = new ArrayList<>();\r\n    private List<FieldAction> actions = new ArrayList<>();\r\n\r\n    public final int x;\r\n    public final int y;\r\n\r\n\r\n    public Space(Board board, int x, int y) {\r\n        this.board = board;\r\n        this.x = x;\r\n        this.y = y;\r\n        player = null;\r\n    }\r\n\r\n    public Player getPlayer() {\r\n        return player;\r\n    }\r\n    public void setPlayer(Player player) {\r\n        Player oldPlayer = this.player;\r\n        if (player != oldPlayer &&\r\n                (player == null || board == player.board)) {\r\n            this.player = player;\r\n            if (oldPlayer != null) {\r\n                // this should actually not happen\r\n                oldPlayer.setSpace(null);\r\n            }\r\n            if (player != null) {\r\n                player.setSpace(this);\r\n            }\r\n            notifyChange();\r\n        }\r\n    }\r\n        public List<Heading> getWalls() {\r\n            return walls;\r\n        }\r\n\r\n        public List<FieldAction> getActions() {\r\n            return actions;\r\n        }\r\n\r\n    public List <Heading> getWalls() {\r\n        return walls;\r\n    }\r\n        public List<FieldAction> getActions() {\r\n            return actions;\r\n        }\r\n\r\n        void playerChanged() {\r\n            {\r\n                // This is a minor hack; since some views that are registered with the space\r\n                // also need to update when some player attributes change, the player can\r\n                // notify the space of these changes by calling this method.\r\n                notifyChange();\r\n            }\r\n\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/roborally/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Space.java b/roborally/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Space.java
--- a/roborally/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Space.java	(revision 2658599e21a0c28bd4f566420aaaa1f70e3af209)
+++ b/roborally/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Space.java	(date 1647901751091)
@@ -42,11 +42,7 @@
      * @author Christoffer Fink, s205449
      *
      */
-    private List<Heading> walls = new ArrayList<>();
-    private List<FieldAction> actions = new ArrayList<>();
-
     public final Board board;
-    private Player player;
 
     private List<Heading> walls = new ArrayList<>();
     private List<FieldAction> actions = new ArrayList<>();
@@ -54,7 +50,6 @@
     public final int x;
     public final int y;
 
-
     public Space(Board board, int x, int y) {
         this.board = board;
         this.x = x;
@@ -62,9 +57,6 @@
         player = null;
     }
 
-    public Player getPlayer() {
-        return player;
-    }
     public void setPlayer(Player player) {
         Player oldPlayer = this.player;
         if (player != oldPlayer &&
@@ -78,7 +70,7 @@
                 player.setSpace(this);
             }
             notifyChange();
-        }
+
     }
         public List<Heading> getWalls() {
             return walls;
